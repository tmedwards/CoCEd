<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CoCEd"
    xmlns:common="clr-namespace:CoCEd.Common">

    <SolidColorBrush x:Key="NumericBorderBrush" Color="#808080"/>
    <SolidColorBrush x:Key="NumericDisabledForeground" Color="#C0C0C0"/>
    <SolidColorBrush x:Key="NumericDisabledForegroundDark" Color="#808080"/>
    <SolidColorBrush x:Key="NumericMouseOverBackground" Color="#DA3610"/>

    <Style x:Key="MinMaxButton" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Padding" Value="3,3,3,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#303030"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="mouseOverBorder" Background="White" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <TextBlock x:Name="text" Text="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="True"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="mouseOverBorder" Property="Background" Value="{StaticResource NumericMouseOverBackground}" />
                            <Setter TargetName="text" Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource NumericDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type common:MyNumericBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:MyNumericBox}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="124"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button    Grid.Column="0" x:Name="minButton" Style="{StaticResource MinMaxButton}" HorizontalAlignment="Right" HorizontalContentAlignment="Right" SnapsToDevicePixels="True"/>

                        <Border    Grid.Column="1" x:Name="border" BorderThickness="1" BorderBrush="{StaticResource NumericBorderBrush}" Background="Transparent" SnapsToDevicePixels="True"/>
                        <TextBox   Grid.Column="1" x:Name="textBox" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Margin="6,0"/>
                        <TextBlock Grid.Column="1" x:Name="unitText" Text="{TemplateBinding Unit}" Foreground="#808080" VerticalAlignment="Center" Margin="4,0,4,1" HorizontalAlignment="Right"/>

                        <Button    Grid.Column="2" x:Name="maxButton" Style="{StaticResource MinMaxButton}"  HorizontalAlignment="Left" HorizontalContentAlignment="Left" SnapsToDevicePixels="True"/>

                        <TextBlock Grid.Column="3" x:Name="toolTip" HorizontalAlignment="Center" Foreground="#A0A0A0" VerticalAlignment="Center" Margin="6,0,0,0" FontStyle="Italic"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="unitText" Property="Foreground" Value="{StaticResource NumericDisabledForeground}" />
                            <Setter TargetName="textBox" Property="Foreground" Value="{StaticResource NumericDisabledForegroundDark}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource NumericDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ArrayEditorButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="root" BorderThickness="0" BorderBrush="#808080" SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}" Background="#00FFFFFF">
                        <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="#606060" FontSize="12" HorizontalAlignment="Center" Margin="0,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="text" Property="Foreground" Value="#DA3100"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="text" Property="Foreground" Value="#DA3810"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrayEditorItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#DA3100" SnapsToDevicePixels="True" Background="#00FFFFFF">
                        <ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#F8F8F8"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="root" Property="Background" Value="#F0F0F0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type common:ArrayEditor}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="MinWidth" Value="350"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:ArrayEditor}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                            <Border BorderThickness="0,0,0,1" BorderBrush="#808080" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{TemplateBinding Header}" FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Margin="4,0,0,0"/>
                                <Button x:Name="addButton" Grid.Column="1" Content="Add" Style="{StaticResource ArrayEditorButton}" Margin="4,0,0,0"/>
                                <Button x:Name="removeButton" Grid.Column="2" Content="Remove" Style="{StaticResource ArrayEditorButton}" Margin="4,0,0,0"/>
                            </Grid>
                        </Border>
                        <ListBox Grid.Row="1" x:Name="listBox" SelectionMode="Single" Margin="0" Padding="0" BorderThickness="0" ItemContainerStyle="{StaticResource ArrayEditorItem}"
                                        ItemsSource="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}" AllowDrop="True" />
                        <Border Grid.Row="2" x:Name="contentBorder" BorderThickness="0,1,0,0" BorderBrush="#808080" SnapsToDevicePixels="True" Visibility="Collapsed">
                            <ContentControl Content="{TemplateBinding Content}" Margin="0,8,0,0" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type common:MyComboBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="8,5,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:MyComboBox}">
                    <ComboBox x:Name="combo" DisplayMemberPath="Name" SelectedValuePath="ID" Width="150" Margin="0"
                              ItemsSource="{TemplateBinding ItemsSource}"
                              SelectedValue="{Binding Path=SelectedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style TargetType="{x:Type common:MyPiercingBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:MyPiercingBox}">
                    <Grid>
                        <ToggleButton x:Name="button" BorderThickness="1" BorderBrush="#ACACAC" Width="150" HorizontalContentAlignment="Stretch">
                            <ToggleButton.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#F0F0F0" Offset="0"/>
                                    <GradientStop Color="#E5E5E5" Offset="1"/>
                                </LinearGradientBrush>
                            </ToggleButton.Background>
                            <Grid Margin="4,2" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding Label}" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"/>
                                <Rectangle Grid.Column="1" Fill="#A0A0A0" Width="1" Margin="8,0,4,0" SnapsToDevicePixels="True"/>
                                <TextBlock Grid.Column="2" Text="..." Margin="2,0"/>
                            </Grid>
                        </ToggleButton>
                        <Popup x:Name="popup" StaysOpen="False">
                            <Border BorderThickness="1" BorderBrush="#404040" Background="White">
                                <Grid Margin="20" Width="220">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Type" VerticalAlignment="Center"/>
                                    <common:MyComboBox Grid.Column="1" SelectedValue="{Binding Type}" ItemsSource="{Binding AllTypes}" HorizontalAlignment="Right"/>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Foreground="#808080" Margin="3,0,0,0" Text="Even if you change or remove one of Ceraph's piercings, the game will still consider it is there." TextWrapping="Wrap" TextAlignment="Justify" />

                                    <TextBox Grid.Row="3" Grid.ColumnSpan="2" Text="{Binding UpperName}" IsEnabled="{Binding CanEditName}" Height="26" VerticalContentAlignment="Center"/>
                                    <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="Ex: Diamond eyebrow-stud" IsEnabled="{Binding CanEditName}" Foreground="#808080" VerticalAlignment="Center" Margin="3,2,0,0"/>

                                    <TextBox Grid.Row="6" Grid.ColumnSpan="2" Text="{Binding LowerName}" IsEnabled="{Binding CanEditName}" Height="26" VerticalContentAlignment="Center"/>
                                    <TextBlock Grid.Row="7" Grid.ColumnSpan="2" Text="Ex: diamond eyebrow-stud" IsEnabled="{Binding CanEditName}" Foreground="#808080" VerticalAlignment="Center" Margin="3,2,0,0"/>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
